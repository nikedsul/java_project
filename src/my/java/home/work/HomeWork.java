package my.java.home.work;

public class HomeWork {

	public static void main(String[] args) {

		/* Создать четыре целочисленные переменные */
		byte bt;
		short s;
		int i;
		long l;

		/*
		 * Инициализировать переменную типа byte результатом суммы двух любых
		 * чисел
		 */
		bt = 11 + 27;

		/*
		 * Инициализировать переменную типа short результатом вычитания двух
		 * любых чисел
		 */
		s = 387 - 122;

		/*
		 * Инициализировать переменную типа int результатом деления двух любых
		 * чисел
		 */
		i = 486 / 2;

		/*
		 * Инициализировать переменную типа long результатом умножения двух
		 * любых чисел
		 */
		l = 5566 * 54;

		/*
		 * Передать перменной типа byte результат суммы двух переменной типа
		 * byte
		 */
		byte b1 = 4;
		byte b2 = 3;
		bt = (byte) (b1 + b2);

		/*
		 * Передать переменной типа byte результат суммы двух переменных типа
		 * short , деленных на третью переменную типа byte
		 */
		short s1, s2;
		s1 = 46;
		s2 = 876;
		bt = (byte) ((s1 + s2) / bt);

		/*
		 * Переменной типа int передать результат деления двух short ,
		 * умноженных на результат деления двух byte
		 */
		i = (s1 / s2) * (b1 / b2);

		/* Поменять значения двух целочисленных переменных используя третью */
		int i1, i2;
		i1 = 123;
		i2 = 345;
		i = i1;
		i1 = i2;
		i2 = i;

		/* Поменять значения двух переменных без использования третей */
		i1 = 15;
		i2 = 3;
		i1 = i1 + i2;
		i2 = i1 - i2;
		i1 = i1 - i2;

		/* Переменные и операции ветвления(if-else) */
		/*
		 * Задано три переменных, найти переменную с максимальным значением
		 * (Значение все переменных разные).
		 */
		int am, cm, dm, max;
		am = 5;
		cm = 97;
		dm = 21;
		max = am;
		if (max < cm);
		max = cm;
		if (max < dm);
		max = dm;

		/*
		 * Написать алгоритм перевода в двоичную систему счисления любого числа
		 * от 1 до 127 и представить его в виде одного byte.
		 */
		int q, t;
		q = 89;
		System.out.print(q);
		String binar = "";
		for (int k = 0; k < 8; k++)

		{
			t = q % 2;
			q = q / 2;
			binar = t + binar;
		}
		System.out.println(" - в двоичной системе в виде одного byte = " + binar);

		/*
		 * Написать программу, делающую обратную операцию перевода, из двоичной
		 * в десятеричную.
		 */
        int dec = 0;
		String bin = "111101";
		int j =bin.length()-1;

		for (int n = 0; n < bin.length(); n++)
		{
	        dec += (int) Math.pow(2, j) * (bin.charAt(n) == '1' ? 1 : 0);
	        j--;
	    }
		System.out.println(bin + "- в десятичном виде = " + dec);
		
		/* Задано четыре переменных, найти вторую по величине */
		
		/* С использованием масивов */
		
		int p [] = {445, 175, 224, 91};
		for (int r = 0; r < 4; r++)
		{         
            for (int y = 4 - 1; y > r; y--)
            {     
                if (p[y] < p[y - 1])
                {
                    int temp = p[y];
                    p[y] = p[y - 1];
                    p[y - 1] = temp;                   
                }
            }
        }  System.out.println("Вторая по велечине переменная:  " + p[2]);
		
        
        /* С использованием арифметических методов */
        
        int a, b, c, d;
		a = 712;
		b = 455;
		c = 477;
		d = 3875;
		System.out.print("Вторая по величине переменная: ");

		if (a > b && a > c && a < d || a > c && a > d && a < b || a > d && a > b && a < c)
			System.out.println(a);

		if (b > a && b > c && b < d || b > c && b > d && b < a || b > d && b > a && b < c)
			System.out.println(b);

		if (c > b && c > a && c < d || c > a && c > d && c < b || c > d && c > b && c < a)
			System.out.println(c);

		if (d > b && d > c && a > d || d > c && a < d && d < b || a < d	&& d > b && d < c)
			System.out.println(d);
        
        
        
        
        
        
	}

}
